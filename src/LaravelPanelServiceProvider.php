<?php

namespace Mintreu\LaravelPanel;

use Illuminate\Filesystem\Filesystem;
use Illuminate\Support\Facades\Blade;
use Illuminate\Support\Str;
use Livewire\Livewire;
use Mintreu\LaravelPanel\Panel\Dashboard;
use Mintreu\LaravelPanel\Panel\Login;
use Mintreu\LaravelPanel\Panel\Navigation\Sidebar;
use Mintreu\LaravelPanel\Panel\Navigation\TopBar;
use Mintreu\LaravelPanel\Panel\Panel;
use Mintreu\LaravelPanel\Panel\Record\CreateRecord;
use Mintreu\LaravelPanel\Panel\Record\EditRecord;
use Mintreu\LaravelPanel\Panel\Record\ListRecord;
use Mintreu\LaravelPanel\Panel\Record\Record;
use Mintreu\LaravelPanel\Panel\Record\RecordContainer;
use Mintreu\LaravelPanel\Panel\Record\ViewRecord;
use Spatie\LaravelPackageTools\Package;
use Spatie\LaravelPackageTools\PackageServiceProvider;
use Mintreu\LaravelPanel\Commands\LaravelPanelCommand;

class LaravelPanelServiceProvider extends PackageServiceProvider
{
    public function configurePackage(Package $package): void
    {
        /*
         * This class is a Package Service Provider
         *
         * More info: https://github.com/spatie/laravel-package-tools
         */
        $package
            ->name('laravel-panel')
            ->hasConfigFile()
            ->hasRoute('web')
            ->hasViews()
            ->hasMigration('create_laravel-panel_table')
            ->hasCommand(LaravelPanelCommand::class);
    }




    public function bootingPackage()
    {

        Livewire::component('panel::panel',Panel::class);
        Livewire::component('panel::topBar',TopBar::class);
        Livewire::component('panel::sideBar',Sidebar::class);
        Livewire::component('panel::dashboard',Dashboard::class);
        Livewire::component('panel::login',Login::class);


        Livewire::component('panel::record-container',RecordContainer::class);
        Livewire::component('panel::record',Record::class);
        Livewire::component('panel::create-record',CreateRecord::class);
        Livewire::component('panel::edit-record',EditRecord::class);
        Livewire::component('panel::view-record',ViewRecord::class);
        Livewire::component('panel::list-record',ListRecord::class);




//        Blade::component('panel::theme', PanelTheme::class);
//        Livewire::component('panel::create-record',CreateRecord::class);
//        Livewire::component('panel::edit-record',EditRecord::class);
//        Livewire::component('panel::view-record',ViewRecord::class);
//        Livewire::component('panel::list-record',ListRecord::class);
//        Livewire::component('panel::dashboard',Dashboard::class);
//        Livewire::component('panel::navigation',Navigation::class);
//        Livewire::component('panel::sidebar',Sidebar::class);
//
//        Livewire::component('panel::users',Users::class);
//        Livewire::component('panel::profile',Profile::class);


    //    $this->hasBootableUserComponents();
        parent::bootingPackage(); // TODO: Change the autogenerated stub
    }

    public function hasBootableUserComponents()
    {
        $filesystem = app(Filesystem::class);

        $allPanels = $filesystem->directories(app_path('Panels'));
        $panelFileList=[];
        foreach ($allPanels as $panel)
        {
            $panelFileList [Str::replace(app_path('Panels').'\\','',$panel)] = $filesystem->allFiles($panel);
        }

       // dd($panelFileList);
    }



}
